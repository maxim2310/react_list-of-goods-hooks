{"version":3,"sources":["Props.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","options","App","useState","setGoods","started","setStarted","reversed","setReversed","sortedBy","setSortedBy","curentLength","setCrentLength","visibleGoods","filter","length","sort","g1","g2","localeCompare","reverse","className","type","onClick","value","onChange","event","currentTarget","el","ReactDOM","render","document","getElementById"],"mappings":"oMAMaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,SCNXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAuF7BC,EArFO,WACpB,MAA0BC,mBAAmBH,GAA7C,mBAAOH,EAAP,KAAcO,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAuCP,mBAAS,KAAhD,mBAAOQ,EAAP,KAAqBC,EAArB,KAEIC,EAAehB,EAInB,OAFAgB,EAAehB,EAAMiB,QAAO,SAAAf,GAAI,OAAIA,EAAKgB,SAAWJ,KAE5CF,GACN,IAAK,iBAAkBI,EAAaG,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MACpE,MACF,IAAK,SAAUL,EAAaG,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGF,OAASG,EAAGH,UAW9D,OAJIR,GACFM,EAAaO,UAIb,sBAAKC,UAAU,MAAf,UACE,uCACEhB,EAEE,qCACE,wBACEiB,KAAK,SACLC,QAAS,kBAAOf,GAAaD,IAF/B,qBAMA,wBACEe,KAAK,SACLC,QAAS,kBAAOb,EAAY,mBAF9B,kBAMA,wBACEY,KAAK,SACLC,QAAS,kBAAOb,EAAY,iBAF9B,0BAMA,wBACEY,KAAK,SACLC,QAAS,WACPnB,EAASJ,GACTQ,GAAY,GACZE,EAAY,IACZE,EAAe,MANnB,mBAWA,wBACEY,MAAOb,EACPc,SAAU,SAACC,GACTd,EAAec,EAAMC,cAAcH,QAHvC,SAMGvB,EAAQH,KAAI,SAAC8B,GAAD,OACX,wBAAQJ,MAAK,UAAKI,GAAlB,SAAyBA,SAG7B,cAAC,EAAD,CAAW/B,MAAOgB,OAIpB,wBACES,KAAK,SACLC,QAAS,kBAAOjB,GAAYD,IAF9B,uBC1FVwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.3c6768ac.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './Props';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<string[]>(goodsFromServer);\n  const [started, setStarted] = useState(false);\n  const [reversed, setReversed] = useState(false);\n  const [sortedBy, setSortedBy] = useState('');\n  const [curentLength, setCrentLength] = useState('1');\n\n  let visibleGoods = goods;\n\n  visibleGoods = goods.filter(good => good.length >= +curentLength);\n\n  switch (sortedBy) {\n    case 'Alphabetically': visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n    case 'Length': visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (reversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {(started)\n        ? (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => (setReversed(!reversed))}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => (setSortedBy('Alphabetically'))}\n            >\n              Sort\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => (setSortedBy('SortByLength'))}\n            >\n              SortByLength\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => {\n                setGoods(goodsFromServer);\n                setReversed(false);\n                setSortedBy('');\n                setCrentLength('1');\n              }}\n            >\n              Reset\n            </button>\n            <select\n              value={curentLength}\n              onChange={(event) => {\n                setCrentLength(event.currentTarget.value);\n              }}\n            >\n              {options.map((el) => (\n                <option value={`${el}`}>{el}</option>\n              ))}\n            </select>\n            <GoodsList goods={visibleGoods} />\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={() => (setStarted(!started))}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}